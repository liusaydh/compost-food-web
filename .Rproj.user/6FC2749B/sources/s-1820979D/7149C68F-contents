---
title: "FUN SUGAR RUSH"
author: "Madalina"
date: "25/11/2021"
output:
  pdf_document: default
  html_document: default
  word_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Model setup

We load the libraries

```{r}
require(deSolve)
```

We define initial values for state variables and parameters
```{r}
C.INI <- 300/180*6
state <- c(BACTERIA = 0.10*C.INI, FUNGI = 0.05*C.INI, A.BISPORUS = 0.001*C.INI, 
           SUGARS = 10*0.01*C.INI, COMPOST = C.INI, CO2 = 0)

#parameters that comprise rate laws of processes go here
parms <- c(
  k20.bac.mort = 0*1,
  k21.fun.mort = 1/7,
  k22.bisp.mort = 1/7,
  k11.bac.uptake = 1*1,
  kSUGARS.bac = 0.001*C.INI, # because of steady state
  kBISPORUS = 0.01*C.INI,
  k12.fun.uptake = 0*1/7,
  kSUGARS.fun = 0.001*C.INI,
  k13.bisp.uptake = 0*1,
  kSUGARS.bisp = 0.001*C.INI,
  MAX.A.BISPORUS = 0.15*C.INI,
  k14.fun.killing.bac = 0,
  k15.bisp.killing.bac = 0,
  k16.bisp.killing.fun = 0,
  k1.deg.bac = 0*0.1,
  k2.deg.fun = 0*0.2,
  k3.deg.bisp = 0*0.3,
  Ef.fun = 0.1, # C assimilation efficiency
  Ef.bac = 0.1,
  Ef.bisp = 0.1
)
```

Here we define the model function.

```{r}
WHITEBUTTON <- function(t, state, parameters) { 
  with(as.list(c(state, parameters)),{
 
  # Rate expressions - all in units of [mmolC/m3/day] go here
      R20.bac.mort <- k20.bac.mort * BACTERIA
      R21.fun.mort <- k21.fun.mort * FUNGI
      R22.bisp.mort <- k22.bisp.mort * A.BISPORUS
      R11.bac.uptake <- k11.bac.uptake * SUGARS/(SUGARS+kSUGARS.bac) * BACTERIA * kBISPORUS/(A.BISPORUS+kBISPORUS)
      R12.fun.uptake <- k12.fun.uptake * SUGARS/(SUGARS+kSUGARS.fun) * FUNGI * kBISPORUS/(A.BISPORUS+kBISPORUS)
      R13.bisp.uptake <- k13.bisp.uptake * SUGARS/(SUGARS+kSUGARS.bisp) * A.BISPORUS * (1-A.BISPORUS/MAX.A.BISPORUS)
      R14.fun.killing.bac <- k14.fun.killing.bac * BACTERIA * FUNGI
      R15.bisp.killing.bac <- k15.bisp.killing.bac * BACTERIA * A.BISPORUS
      R16.bisp.killing.fun <- k16.bisp.killing.fun * FUNGI * A.BISPORUS
      R1.deg.bac <- k1.deg.bac * BACTERIA
      R2.deg.fun <- k2.deg.fun * FUNGI
      R3.deg.bisp <- k3.deg.bisp * A.BISPORUS
      
      #x13C.bac <- BACTERIA13/BACTERIA
      
  # Mass balances [molN/m3/day] go here
      dSUGARS     <- R20.bac.mort + 
                     R21.fun.mort + 
                     R22.bisp.mort - 
                     R11.bac.uptake - 
                     R12.fun.uptake - 
                     R13.bisp.uptake + 
                     R14.fun.killing.bac + 
                     R15.bisp.killing.bac + 
                     R16.bisp.killing.fun +
                     R1.deg.bac + 
                     R2.deg.fun + 
                     R3.deg.bisp
      
      #dSUGARS13 <- R20.bac.mort*x13C.BACTERIA + ... - R11.bac.uptake*x13C.SUGARS
      
      dBACTERIA   <- Ef.bac*R11.bac.uptake - 
                     R15.bisp.killing.bac - 
                     R20.bac.mort - 
                     R14.fun.killing.bac
      
      dFUNGI      <- Ef.fun*R12.fun.uptake - 
                     R16.bisp.killing.fun - 
                     R21.fun.mort
      
      dA.BISPORUS <- Ef.bisp*R13.bisp.uptake - 
                     R22.bisp.mort
      
      #dA.BISPORUS <- Ef.bisp*R13.bisp.uptake*x13C.SUGARS + ...
        
      dCO2        <- (1-Ef.bac)*R11.bac.uptake + 
                     (1-Ef.fun)*R12.fun.uptake + 
                     (1-Ef.bisp)*R13.bisp.uptake
      
      dCOMPOST    <- -R1.deg.bac - R2.deg.fun - R3.deg.bisp
      
      TOTAL_C     <- COMPOST + BACTERIA + SUGARS + FUNGI + A.BISPORUS + CO2
      
  # Model output goes here
      return (list(c(dBACTERIA, dFUNGI, dA.BISPORUS, dSUGARS, dCOMPOST, dCO2),
                     TOTAL_C = TOTAL_C, 
                   R11.bac.uptake = R11.bac.uptake,
                   R12.fun.uptake = R12.fun.uptake,
                   R13.bisp.uptake = R13.bisp.uptake
                   )
              )
      })
}
```

And finally we run the model and plot the results.

```{r}
outtimes     <- seq(from = 0, to = 24, length.out = 241)
model_output <- ode(y = state, parms = parms, func = WHITEBUTTON, times = outtimes)
```

```{r, fig.height=4, fig.width=8}
plot(model_output, mfrow=c(1,3), which=c("BACTERIA", "FUNGI", "A.BISPORUS"))
```

```{r, fig.height=4, fig.width=8}
plot(model_output, mfrow=c(1,3), which=c("SUGARS", "COMPOST", "CO2"))
```

```{r, fig.height=4, fig.width=8}
plot(model_output, mfrow=c(1,3), which=c("TOTAL_C", "R11.bac.uptake", "R12.fun.uptake"))
```
