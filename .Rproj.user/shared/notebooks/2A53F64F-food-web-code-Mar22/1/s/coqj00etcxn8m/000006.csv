"0","#---------------------------------------------------------------------------------------------------------"
"0","state       <- state"
"0","times       <- outtimes"
"0","defaultprog <- ode(y = state, times = outtimes, func = WHITEBUTTON, parms = parms)"
"0","#---------------------------------------------------------------------------------------------------------"
"0","UI.Si <- shinyUI(pageWithSidebar("
"0","  headerPanel(""Compost Food Web Interactive Simulation""),"
"0",""
"0","  sidebarPanel("
"0","   sliderInput(inputId=""k1.deg.bac"",   label = ""degradation into sugars by bacteria, /d"",   "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k1.deg.bac),"
"0","   sliderInput(inputId=""k2.deg.fun"",   label = ""degradation into sugars by fungi, /d"",        "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k2.deg.fun),"
"0","   sliderInput(inputId=""k3.deg.bisp"",  label = ""degradation into sugars by A. bisporus, /d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k3.deg.bisp),"
"0","   sliderInput(inputId=""k4.bac.uptake"", label = ""maximum carb uptake rate by bacteria, /d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k4.bac.uptake),"
"0","   sliderInput(inputId=""k5.fun.uptake"", label = ""maximum carb uptake rate by fungi, /d"",   "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k5.fun.uptake),"
"0","   sliderInput(inputId=""k6.bisp.uptake"", label = ""maximum carb uptake rate by A. bisporus, /d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k6.bisp.uptake),"
"0","   sliderInput(inputId=""k7.fun.killing.bac"", label = ""maximum predation ct fungi > bacteria, /d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k7.fun.killing.bac),"
"0","   sliderInput(inputId=""k8.bisp.killing.bac"", label = ""maximum predation ct A. bisporus > bacteria, /d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k8.bisp.killing.bac),"
"0","   sliderInput(inputId=""k9.bisp.killing.fun"", label = ""maximum predation ct A. bisporus > fungi, /d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k9.bisp.killing.fun),"
"0","   sliderInput(inputId=""k10.bac.mort"", label = ""bacterial mct, (mmol C per cubic meter)/d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k10.bac.mort),"
"0","   sliderInput(inputId=""k11.fun.mort"", label = ""fungal mct, (mmol C per cubic meter)/d"",   "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k11.fun.mort),"
"0","   sliderInput(inputId=""k12.bisp.mort"", label = ""A. bisporus mct, (mmol C per cubic meter)/d"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$k12.bisp.mort),"
"0","   sliderInput(inputId=""kBISPORUS"", label = ""Monod ct A. bisporus, mmol C per cubic meter"",   "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$kBISPORUS),"
"0","   sliderInput(inputId=""MAX.A.BISPORUS"", label = ""maxunlim A. bisporus growth, mmol C per cubic meter"", "
"0","     min = 0.01, max = 5.0, step = 0.1, value = parms$MAX.A.BISPORUS),"
"0","   sliderInput(inputId=""kSUGARS.bac"", label = ""bacterial growth limit, mmol C per cubic meter"","
"0","     min = 0.01, max = 2.0, step = 0.01, value = parms$kSUGARS.bac),"
"0","   sliderInput(inputId=""kSUGARS.fun"", label = ""fungal growth limit, mmol C per cubic meter"", "
"0","     min = 0.01, max = 2.0, step = 0.01, value = parms$kSUGARS.fun),"
"0","   sliderInput(inputId=""kSUGARS.bisp"", label = ""A. bisporus growth limit, mmol C per cubic meter"", "
"0","     min = 0.01, max = 2.0, step = 0.01, value = parms$kSUGARS.bisp),"
"0","   sliderInput(inputId=""Ef.bac"", label = ""%C assimilated by bacteria due to eating, (-)"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$Ef.bac),"
"0","   sliderInput(inputId=""Ef.fun"", label = ""%C assimilated by fungi due to eating, (-)"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$Ef.fun),"
"0","   sliderInput(inputId=""Ef.bisp"", label = ""%C assimilated by A. bisporus due to eating, (-)"", "
"0","     min = 0.01, max = 1.0, step = 0.01, value = parms$Ef.bisp),"
"0","   "
"0","   actionButton (inputId=""resetButton"", label=""Reset Parameters""),"
"0","    "
"0","   checkboxInput(inputId=""defaultRun"",  label=strong(""Add default run?""), value=TRUE),"
"0","   br()"
"0","  ),"
"0",""
"0","  mainPanel("
"0","      plotOutput(""PlotSi""))"
"0","))"
"2","Warning:"
"2"," In sliderInput(): `value` should be greater than or equal to `min` (value = 0, min = 0.01).
"
"0","#-------------------------------------------------------------------------------------------------------"
"0","Server.Si <- shinyServer(function(input, output, session) {"
"0",""
"0","#----------------------------------------Reset button definition----------------------------------------"
"0","  observeEvent(input$resetButton, {"
"0","    updateNumericInput(session, ""k1.deg.bac"",             value = parms$k1.deg.bac)"
"0","    updateNumericInput(session, ""k2.deg.fun"",             value = parms$k2.deg.fun)"
"0","    updateNumericInput(session, ""k3.deg.bisp"",            value = parms$k3.deg.bisp)"
"0","    updateNumericInput(session, ""k4.bac.uptake"",          value = parms$k4.bac.uptake)"
"0","    updateNumericInput(session, ""k5.fun.uptake"",          value = parms$k5.fun.uptake)"
"0","    updateNumericInput(session, ""k6.bisp.uptake"",         value = parms$k6.bisp.uptake)"
"0","    updateNumericInput(session, ""k7.fun.killing.bac"",     value = parms$k7.fun.killing.bac)"
"0","    updateNumericInput(session, ""k8.bisp.killing.bac"",    value = parms$k8.bisp.killing.bac)"
"0","    updateNumericInput(session, ""k9.bisp.killing.fun"",    value = parms$k9.bisp.killing.fun)"
"0","    updateNumericInput(session, ""k10.bac.mort"",           value = parms$k10.bac.mort)"
"0","    updateNumericInput(session, ""k11.fun.mort"",           value = parms$k11.fun.mort)"
"0","    updateNumericInput(session, ""k12.bisp.mort"",          value = parms$k12.bisp.mort)"
"0","    updateNumericInput(session, ""kBISPORUS"",              value = parms$kBISPORUS)"
"0","    updateNumericInput(session, ""MAX.A.BISPORUS"",         value = parms$MAX.A.BISPORUS)"
"0","    updateNumericInput(session, ""kSUGARS.bac"",            value = parms$kSUGARS.bac)"
"0","    updateNumericInput(session, ""kSUGARS.fun"",            value = parms$kSUGARS.fun)"
"0","    updateNumericInput(session, ""kSUGARS.bisp"",           value = parms$kSUGARS.bisp)"
"0","    updateNumericInput(session, ""Ef.bac"",                 value = parms$Ef.bac)"
"0","    updateNumericInput(session, ""Ef.fun"",                 value = parms$Ef.fun)"
"0","    updateNumericInput(session, ""Ef.bisp"",                value = parms$Ef.bisp)"
"0","  })"
"0",""
"0","#-------------------Acquires model parameters which are defined in the user interface-------------------"
"0","  getparms <- reactive( {"
"0","    newparms                        <- parms "
"0","    newparms$k1.deg.bac             <- input$k1.deg.bac"
"0","    newparms$k2.deg.fun             <- input$k2.deg.fun   "
"0","    newparms$k3.deg.bisp            <- input$k3.deg.bisp "
"0","    newparms$k4.bac.uptake          <- input$k4.bac.uptake  "
"0","    newparms$k5.fun.uptake          <- input$k5.fun.uptake"
"0","    newparms$k6.bisp.uptake         <- input$k6.bisp.uptake "
"0","    newparms$k7.fun.killing.bac     <- input$k7.fun.killing.bac"
"0","    newparms$k8.bisp.killing.bac    <- input$k8.bisp.killing.bac "
"0","    newparms$k9.bisp.killing.fun    <- input$k9.bisp.killing.fun "
"0","    newparms$k10.bac.mort           <- input$k10.bac.mort"
"0","    newparms$k11.fun.mort           <- input$k11.fun.mort"
"0","    newparms$k12.bisp.mort          <- input$k12.bisp.mort "
"0","    newparms$kBISPORUS              <- input$kBISPORUS"
"0","    newparms$MAX.A.BISPORUS         <- input$MAX.A.BISPORUS "
"0","    newparms$kSUGARS.bac            <- input$kSUGARS.bac"
"0","    newparms$kSUGARS.fun            <- input$kSUGARS.fun "
"0","    newparms$kSUGARS.bisp           <- input$kSUGARS.bisp"
"0","    newparms$Ef.bac                 <- input$Ef.bac "
"0","    newparms$Ef.fun                 <- input$Ef.fun"
"0","    newparms$Ef.bisp                <- input$Ef.bisp "
"0","    newparms"
"0","  })"
"0",""
"0","#------------------------------------------Defines the plot tab------------------------------------------"
"0","  output$PlotSi <- renderPlot({"
"0",""
"0","   newparms     <- getparms()                    "
"0","   out          <- ode(y = state, parms = newparms, func = WHITEBUTTON, times = outtimes)"
"0",""
"0","   if (input$defaultRun) {"
"0","      plot (out, defaultprog, which=c(""BACTERIA"", ""FUNGI"", ""A.BISPORUS"", ""SUGARS"", ""COMPOST"", ""CO2""), lwd = 2, las = 1, lty = 1,                        cex.main = 1.5, cex.axis = 1.25, cex.lab = 1.25)  "
"0","      legend(""bottomright"", legend = c(""new"", ""default""), cex = 1.5, col = 1:2, lty = 1)"
"0","    } else  "
"0","      plot (out, lwd = 2, las = 1, lty = 1, cex.main = 1.5, cex.axis = 1.25, cex.lab = 1.25)  "
"0","   })                          "
"0","})     "
"0",""
"0","#--------------------------------------------------------------------------------------------------------"
"0","shinyApp(ui = UI.Si, server = Server.Si)"
"2","
Listening on http://127.0.0.1:5726
"
